# This GitHub Actions workflow sets up a temporary SOCKS5 proxy for testing purposes.
# It runs on every push to the main branch.

name: SOCKS Proxy for Testing

on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-with-proxy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y gcc make

      - name: Set up and run SOCKS5 proxy
        run: |
          # Clone the microsocks repository, a lightweight SOCKS5 server
          git clone https://github.com/rofl0r/microsocks.git
          cd microsocks
          
          # Compile the server
          make
          
          # --- IMPORTANT ---
          # For real-world use, store credentials in GitHub Secrets, not here.
          export PROXY_USER="testuser"
          export PROXY_PASS="changeThisToAStrongPassword!"
          
          # Run the SOCKS5 proxy in the background on port 1080
          # We bind to 0.0.0.0 to allow external connections.
          echo "Starting SOCKS5 proxy on 0.0.0.0:1080"
          ./microsocks -i 0.0.0.0 -p 1080 -u $PROXY_USER -P $PROXY_PASS &
          
      - name: Wait for proxy to initialize
        run: sleep 5 # Give the proxy a few seconds to start up

      - name: Display Connection Details & Keep Alive
        run: |
          PUBLIC_IP=$(curl -s ifconfig.me)

          echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
          echo "!!! WARNING: THIS PROXY IS EXPOSED TO THE PUBLIC INTERNET!    !!!"
          echo "!!! IT IS PASSWORD-PROTECTED AND WILL SHUT DOWN IN 15 MINS. !!!"
          echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
          echo ""
          echo "--- Connect with the following details: ---"
          echo "IP Address: $PUBLIC_IP"
          echo "Port: 1080"
          echo "Username: testuser"
          echo "Password: changeThisToAStrongPassword!"
          echo "-------------------------------------------"
          echo ""
          echo "The workflow will remain active for 15 minutes for testing."
          sleep 890 # Keep alive for ~15 mins total, accounting for other steps.

