name: Host Stremio Server (From Scratch - Fixed Path)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Install and Run Stremio Server
        shell: pwsh
        run: |
          echo "Installing Stremio Server CLI..."
          npm install -g @stremio/server-cli
          
          # FIX: Get the full path to the installed executable
          echo "Finding npm global installation path..."
          $npmPrefix = npm prefix -g
          $stremioPath = Join-Path $npmPrefix "stremio-server.cmd"
          
          echo "Starting Stremio Server from: $stremioPath"
          Start-Process -FilePath $stremioPath

      - name: Download and Prepare ngrok
        shell: pwsh
        run: |
          echo "Downloading ngrok..."
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
          
          echo "Extracting ngrok..."
          Expand-Archive ngrok.zip
          
      - name: Authenticate ngrok
        shell: pwsh
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          # You still need to set this secret in your repository settings
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
          
      - name: Start ngrok Tunnel in Background
        shell: pwsh
        run: |
          Start-Process -FilePath ".\ngrok\ngrok.exe" -ArgumentList "http", "11470"

      - name: ðŸ”— Get Link and Create Job Summary
        shell: pwsh
        run: |
          # Wait for ngrok's local API to become available
          Start-Sleep -Seconds 10
          
          # Query the ngrok API to get the public URL
          $tunnels = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
          $publicUrl = ($tunnels.tunnels | Where-Object { $_.proto -eq 'https' }).public_url
          
          # Write the link to the Job Summary page for easy access
          echo "### Stremio Server is Live! âœ¨" >> $env:GITHUB_STEP_SUMMARY
          echo "" >> $env:GITHUB_STEP_SUMMARY
          echo "**Your Streaming Server URL is:**" >> $env:GITHUB_STEP_SUMMARY
          echo "[$publicUrl]($publicUrl)" >> $env:GITHUB_STEP_SUMMARY
          echo "" >> $env:GITHUB_STEP_SUMMARY
          echo "*This server will remain active for up to 6 hours.*" >> $env:GITHUB_STEP_SUMMARY

      - name: Keep Runner Alive
        shell: pwsh
        run: Start-Sleep -Seconds 21600 # Keep alive for 6 hours
