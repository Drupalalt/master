# This GitHub Actions workflow sets up a temporary SOCKS5 proxy for testing purposes.
# It uses ngrok to create a secure tunnel, bypassing firewall restrictions.

name: SOCKS Proxy for Testing

on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-with-proxy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y gcc make jq unzip

      - name: Set up and run SOCKS5 proxy
        run: |
          git clone https://github.com/rofl0r/microsocks.git
          cd microsocks
          make
          
          export PROXY_USER="testuser"
          export PROXY_PASS="changeThisToAStrongPassword!"
          
          # Run the proxy on localhost; ngrok will handle external access.
          echo "Starting SOCKS5 proxy on 127.0.0.1:1080"
          ./microsocks -i 127.0.0.1 -p 1080 -u $PROXY_USER -P $PROXY_PASS &
          
      - name: Set up ngrok tunnel
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          # Download and configure the latest ngrok agent (v3)
          curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz -o ngrok.tgz
          tar -xvzf ngrok.tgz
          chmod +x ngrok
          
          # Use the 'config add-authtoken' command for ngrok v3
          ./ngrok config add-authtoken $NGROK_AUTH_TOKEN
          
          # Start ngrok tunnel in the background for TCP traffic on port 1080
          echo "Starting ngrok tunnel..."
          ./ngrok tcp 1080 &
          sleep 8 # Give ngrok time to establish the connection

      - name: Display Connection Details & Keep Alive
        run: |
          # Get the public URL from the ngrok API
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r .tunnels[0].public_url)
          
          # Parse the hostname and port from the URL (e.g., tcp://0.tcp.ngrok.io:12345)
          NGROK_HOSTNAME=$(echo $NGROK_URL | sed 's/tcp:\/\///' | cut -d: -f1)
          NGROK_PORT=$(echo $NGROK_URL | cut -d: -f2)

          echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
          echo "!!!  PROXY IS LIVE via ngrok and WILL SHUT DOWN IN 15 MINS.   !!!"
          echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
          echo ""
          echo "--- Connect with the following details: ---"
          echo "Hostname: $NGROK_HOSTNAME"
          echo "Port: $NGROK_PORT"
          echo "Username: testuser"
          echo "Password: changeThisToAStrongPassword!"
          echo "-------------------------------------------"
          echo ""
          echo "Example curl command:"
          echo "curl --socks5-hostname $NGROK_HOSTNAME:$NGROK_PORT --proxy-user \"testuser:changeThisToAStrongPassword!\" ifconfig.me"
          echo ""
          echo "The workflow will remain active for 15 minutes for testing."
          sleep 880 # Keep alive for ~15 mins total

